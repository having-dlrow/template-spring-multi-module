buildscript {
    ext {
        springBootVersion = '2.1.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.module'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    // 공통 의존성
    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    }

    test {
        useJUnitPlatform()
    }

    // 해당 task로 서브 모듈 추가시 기초적인 디렉토리를 자동으로 생성해줍니다.
    task initSourceFolders {
        sourceSets*.java.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }

        sourceSets*.resources.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
    }

}

// project(module) 정의
project(':core') {
    bootJar.enabled = false
    jar.enabled = true
    dependencies {
//        runtimeOnly 'mysql:mysql-connector-java'
        implementation 'com.h2database:h2:1.4.190'
    }
}

project(':api') {
    dependencies {
        implementation project(':core')

        implementation 'org.springframework.cloud:spring-cloud-starter-security:2.1.2.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-starter-oauth2:2.1.2.RELEASE'

        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '2.4.1'

//       implementation 'org.springframework.boot:spring-boot-starter-data-rest'

    }
}

project(':oauth2') {
    dependencies {
        implementation project(':core')

        implementation 'org.springframework.cloud:spring-cloud-starter-security:2.1.2.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-starter-oauth2:2.1.2.RELEASE'

        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '2.4.1'

        implementation 'org.springframework.security:spring-security-jwt:1.0.9.RELEASE'

    }
}